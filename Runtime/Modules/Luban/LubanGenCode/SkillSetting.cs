
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg
{
public sealed partial class SkillSetting : Luban.BeanBase
{
    public SkillSetting(ByteBuf _buf) 
    {
        Id = _buf.ReadString();
        Name = _buf.ReadString();
        ExtendDesc = _buf.ReadString();
        AckRate = _buf.ReadFloat();
        AddY = _buf.ReadFloat();
        AddHor = _buf.ReadFloat();
        MaxY2 = _buf.ReadFloat();
        HitTime = _buf.ReadFloat();
        NoGTime = _buf.ReadFloat();
        HorForward = _buf.ReadFloat();
        ShakeLevel = _buf.ReadInt();
        HitStop = _buf.ReadFloat();
        BreakPower = _buf.ReadFloat();
        HitClip = _buf.ReadString();
        HitEffect = _buf.ReadInt();
        ActType = (Skill.EActType)_buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Tags = new System.Collections.Generic.HashSet<string>(/*n0 * 3 / 2*/);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); Tags.Add(_e0);}}
    }

    public static SkillSetting DeserializeSkillSetting(ByteBuf _buf)
    {
        return new SkillSetting(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly string Id;
    /// <summary>
    /// 名字
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string ExtendDesc;
    /// <summary>
    /// 攻击倍率
    /// </summary>
    public readonly float AckRate;
    /// <summary>
    /// 上升距离
    /// </summary>
    public readonly float AddY;
    /// <summary>
    /// 水平推力
    /// </summary>
    public readonly float AddHor;
    /// <summary>
    /// 击飞限高, 防止超过角色高度
    /// </summary>
    public readonly float MaxY2;
    /// <summary>
    /// 上升时间
    /// </summary>
    public readonly float HitTime;
    /// <summary>
    /// 无重力时间
    /// </summary>
    public readonly float NoGTime;
    /// <summary>
    /// 技能正方向(0~360)
    /// </summary>
    public readonly float HorForward;
    /// <summary>
    /// 相机震动等级
    /// </summary>
    public readonly int ShakeLevel;
    /// <summary>
    /// 顿帧
    /// </summary>
    public readonly float HitStop;
    /// <summary>
    /// 破甲值
    /// </summary>
    public readonly float BreakPower;
    /// <summary>
    /// 音效
    /// </summary>
    public readonly string HitClip;
    /// <summary>
    /// 击中特效
    /// </summary>
    public readonly int HitEffect;
    /// <summary>
    /// 类型
    /// </summary>
    public readonly Skill.EActType ActType;
    public readonly System.Collections.Generic.HashSet<string> Tags;
   
    public const int __ID__ = 633610975;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "extendDesc:" + ExtendDesc + ","
        + "ackRate:" + AckRate + ","
        + "addY:" + AddY + ","
        + "addHor:" + AddHor + ","
        + "maxY2:" + MaxY2 + ","
        + "HitTime:" + HitTime + ","
        + "NoGTime:" + NoGTime + ","
        + "horForward:" + HorForward + ","
        + "shakeLevel:" + ShakeLevel + ","
        + "hitStop:" + HitStop + ","
        + "breakPower:" + BreakPower + ","
        + "hitClip:" + HitClip + ","
        + "hitEffect:" + HitEffect + ","
        + "actType:" + ActType + ","
        + "tags:" + Luban.StringUtil.CollectionToString(Tags) + ","
        + "}";
    }
}

}
